#set -g pane-border-status top
#set -g pane-border-format "#{pane_index} #{window_name} #{pane_current_command}"
set-option -g default-terminal "screen-256color"
set-window-option -g mouse on
set -g history-limit 100000

# C-a C-a for the last active window
bind-key C-b last-window

# start window numbering at 1
set -g base-index 1
# don't leave gaps in window numbering after closes
set -g renumber-windows on

# faster command sequences
set -s escape-time 0

# aggressive resize
set -g aggressive-resize on

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display "Reloaded ~/.tmux.conf!"

bind-key m command-prompt 'rename-window %%'

# window movement binds
bind , previous-window
bind . next-window

# move windows left or right
bind < swap-window -t -1
bind > swap-window -t +1


# pane split binds
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# pane movement binds
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# status bar ------------------------------------------------------------------
set-window-option -g window-status-format "#W"
set-window-option -g window-status-current-format "*#W"

#### statusbar ####
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left ''
set -g status-right ''

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg black
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# start new windows with the same working dir
# http://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind c new-window -c "#{pane_current_path}"

# don't rename windows automatically
set-option -g allow-rename off

# copy/paste to os x clipboard
#bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
#bind C-e run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux:#I #W"

# confirm before killing a window or the server
#bind-key k confirm kill-window
bind-key K confirm kill-pane

bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'"

bind '"' list-windows

# New copy mode key binding syntax: https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup 'v' to begin selection as in Vim
#bind-key -T copy-mode-vi v begin-selection
#bind-key -T copy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi y Enter copy-pipe "reattach-to-user-namespace pbcopy"

# open %% man page
bind C-m command-prompt -p "Open man page for:" "new-window 'exec man %%'"

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# reattach to user namespace
set-option -g default-command "reattach-to-user-namespace -l zsh"
