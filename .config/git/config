[user]
useConfigOnly = true
name = Nick Lopez
email = 20211302+nlopez@users.noreply.github.com

[push]
default = current
autoSetupRemote = true

[pull]
rebase = true

[alias]
name = !git symbolic-ref -q HEAD | cut -b 12-
mbase = !git merge-base $(git name) origin/$1 && :
# squash relative to any origin branch
squash = !git fetch origin && git rebase $(git mbase $1) --autostash -i && :
pushf = push --force-with-lease
# subtree add
sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f"
# subtree update
sbu = "!f() { git subtree pull --prefix $2 $1 master --squash; }; f"
# list subtrees
ls-subtrees = !"git log | grep git-subtree-dir | awk '{ print $2 }' | sort -u"
# switch to branch, creating if it doesn't exist
cob = "!f() { git checkout $(git show-ref --verify --quiet refs/heads/\"$1\" || echo '-b') \"$1\"; }; f"
# Print the name of the current upstream tracking branch.
upstream = !git config --get branch.$(git current-branch).remote || echo origin
# Print the name of the current branch.
current-branch = symbolic-ref --short HEAD
# Hard reset branch to the upstream version.
hard-reset = !git reset --hard $(git upstream)/$(git current-branch)
# Delete local branches that have been deleted remotely
pprune = !git fetch --prune
oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
branchdiff = !sh -c \"git diff $(git oldest-ancestor)..\"
branchlog = !sh -c \"git log $(git oldest-ancestor)..\"
root = rev-parse --show-toplevel
st = !git status --ignored
fcommit = commit --no-verify

[core]
quotepath = false
editor = vim
hooksPath = /usr/local/dd/global_hooks

[init]
templateDir = ~/.config/git/template
defaultBranch = main

[diff]
renameLimit = 10000

[worktree]
guessRemote = true

[url "https://"]
insteadOf = git://
insteadOf = ssh://

[filter "lfs"]
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
process = git-lfs filter-process
required = true

[user]
signingkey = ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC6kTX4+xV3Xdo7QRHMIsZaZABV24Ini0/mcrGUfJeddpWzaD+63lI6h4Y9Pnrb1g/D5hvMUm/7AZ2BDiG+2/rJ3nTBdBqbNZXC5m9lLvn4G1uWDn7XmhBfZcXSv99vTHDzXSnHPLowkAT+CHBvT7ZEJZa5Xsmvtb1AQFZhw1U6DrahyXK09PDP41DImrb1Qb3yjSbyHLMzMZ0xroEVPqh3ncqLQH7+lXAxkt8Rn/GGUguhP71vPJgEOw3f81locrnhVERSErNC7BhxioQvPXQfjgK8ejx3YLo6pUYoELyAosekxeeWGR0ZZbWl6vBTB4rtea/N38HrWYfVTyMsF9u+7WTQoAAOhuQr7JUS+7ezBS+Elsva0rKmPdb5KMkHcEIKCEtxJC1V+gXY1g4Ij15k0/2dbnayn2oLboCI1jND945UEkgpajHMiLf1fgayocpyU8iREv5qFaztiTkCy11tv23W4tXDOESdtcHeTajKx8xj9WK+XzLnIu0A8DXWBCct7VGZEM8kRfa41OEIBQ7KFODpZgqMTGx3qC1gO+WZY3uKo6j/5GU/ZfCFs+6cMR60ctDVAholTCfhv2ihsyMfppm9vciwNw37wXrRT1UrM47pDgjPNJtMfchqzxf0zStIutuxfABzN6PLQGVkO6k2YXiFmzpHK4rr5JZl8RTQ9w==

[gpg]
format = ssh

[gpg "ssh"]
program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"

[commit]
gpgsign = true

[credential]
helper =
helper = /usr/local/share/gcm-core/git-credential-manager
useHttpPath = true

[blame]
ignoreRevsFile = .git-blame-ignore-revs
# Mark any lines that have had a commit skipped using --ignore-rev with a `?`
markIgnoredLines = true
# Mark any lines that were added in a skipped commit and can not be attributed with a `*`
markUnblamableLines = true

[includeIf "gitdir/i:~/src/github.com/nlopez/"]
path = ./config_personal

[includeIf "gitdir/i:~/src/github.com/DataDog/"]
path = ./config_datadog
