[user]
useConfigOnly = true
	name = Nick Lopez
	email = 20211302+nlopez@users.noreply.github.com
[push]
default = current
autoSetupRemote = true
[pull]
rebase = true
[alias]
name = !git symbolic-ref -q HEAD | cut -b 12-
mbase = !git merge-base $(git name) origin/$1 && :
# squash relative to any origin branch
squash = !git fetch origin && git rebase $(git mbase $1) --autostash -i && :
pushf = push --force-with-lease
# subtree add
sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f"
# subtree update
sbu = "!f() { git subtree pull --prefix $2 $1 master --squash; }; f"
# list subtrees
ls-subtrees = !"git log | grep git-subtree-dir | awk '{ print $2 }' | sort -u"
# switch to branch, creating if it doesn't exist
cob = "!f() { git checkout $(git show-ref --verify --quiet refs/heads/\"$1\" || echo '-b') \"$1\"; }; f"
# Print the name of the current upstream tracking branch.
upstream = !git config --get branch.$(git current-branch).remote || echo origin
# Print the name of the current branch.
current-branch = symbolic-ref --short HEAD
# Hard reset branch to the upstream version.
hard-reset = !git reset --hard $(git upstream)/$(git current-branch)
# Delete local branches that have been deleted remotely
pprune = !git fetch --prune
oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
branchdiff = !sh -c \"git diff $(git oldest-ancestor)..\"
branchlog = !sh -c \"git log $(git oldest-ancestor)..\"
root = rev-parse --show-toplevel
st = !git status --ignored
fcommit = commit --no-verify
[core]
quotepath = false
	editor = code --new-window --wait --disable-extensions
	hooksPath = /usr/local/dd/global_hooks
[init]
templateDir = ~/.config/git/template
defaultBranch = main
[diff]
renameLimit = 10000
[credential "github.com"]
useHttpPath = true
[includeIf "gitdir/i:~/src/github.com/nlopez/"]
path = ./config_personal
[includeIf "gitdir/i:~/src/github.com/DataDog/"]
path = ./config_datadog
[credential]
helper = manager
	helper = 
	helper = /usr/local/share/gcm-core/git-credential-manager
[worktree]
guessRemote = true
[url "https://"]
insteadOf = git://
[credential "https://dev.azure.com"]
	useHttpPath = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
